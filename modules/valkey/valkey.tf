# locals {
#   valkey_helm_values = {
#     // Global Variables
#     "global.defaultStorageClass" = "local-path"
#     "namespaceOverride"          = "valkey"
#     "commonLabels.app"           = "valkey"

#     // Authentication Variables
#     "auth.existingSecret"            = kubernetes_secret.valkey_password.metadata[0].name
#     "auth.existingSecretPasswordKey" = "password"

#     // Primary Node Resource Limits
#     "primary.resources.limits.cpu"      = "500m"
#     "primary.resources.limits.memory"   = "500Mi"
#     "primary.resources.requests.cpu"    = "100m"
#     "primary.resources.requests.memory" = "100Mi"

#     // Primary Node Pod Labels
#     "primary.podLabels.component" = "pod"
#     "primary.podLabels.section"   = "primary"

#     // Primary Node Persistence Configuration
#     "primary.persistence.size"             = "5Gi"
#     "primary.persistence.labels.component" = "storage"
#     "primary.persistence.labels.section"   = "primary"

#     // Replica Nodes Configuration
#     "replica.replicaCount" = "3"

#     // Replica Nodes Resource Limits
#     "replica.resources.limits.cpu"      = "500m"
#     "replica.resources.limits.memory"   = "500Mi"
#     "replica.resources.requests.cpu"    = "100m"
#     "replica.resources.requests.memory" = "100Mi"

#     // Replica Nodes Pod Labels
#     "replica.podLabels.component" = "pod"
#     "replica.podLabels.section"   = "replica"

#     // Replica Nodes Persistence Configuration
#     "replica.persistence.size"             = "5Gi"
#     "replica.persistence.labels.component" = "storage"
#     "replica.persistence.labels.section"   = "replica"

#     // Replica Nodes Autoscaling
#     "replica.autoscaling.hpa.enabled"      = true
#     "replica.autoscaling.hpa.minReplicas"  = 3
#     "replica.autoscaling.hpa.maxReplicas"  = 10
#     "replica.autoscaling.hpa.targetCPU"    = "90"
#     "replica.autoscaling.hpa.targetMemory" = "90"

#     // Sentinel Configuration
#     "sentinel.enabled" = true

#     // Sentinel Resource Limits
#     "sentinel.resources.limits.cpu"      = "500m"
#     "sentinel.resources.limits.memory"   = "500Mi"
#     "sentinel.resources.requests.cpu"    = "100m"
#     "sentinel.resources.requests.memory" = "100Mi"

#     // TLS Configuration
#     "tls.enabled"         = true
#     "tls.authClients"     = true
#     "tls.autoGenerated"   = false
#     "tls.existingSecret"  = kubernetes_manifest.internal_certificate.manifest.spec.secretName
#     "tls.certFilename"    = "tls.crt"
#     "tls.certKeyFilename" = "tls.key"
#     "tls.certCAFilename"  = "ca.crt"
#   }
# }

# // Valkey Configuration
# resource "helm_release" "valkey" {
#   name      = var.valkey_configuration.name
#   namespace = kubernetes_namespace.namespace.metadata[0].name

#   repository       = var.valkey_configuration.repository
#   chart            = var.valkey_configuration.chart
#   version          = var.valkey_configuration.version
#   create_namespace = var.valkey_configuration.create_namespace

#   set = [for key, value in local.valkey_helm_values : {
#     name  = key
#     value = value
#     }
#   ]

# }
